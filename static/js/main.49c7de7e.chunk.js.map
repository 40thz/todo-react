{"version":3,"sources":["Components/Title.jsx","store/actions/index.js","Components/RemoveBtn.jsx","Components/Task.jsx","Components/Color.jsx","Components/AddPanel.jsx","Components/AddBtn.jsx","Components/TaskContent/Input.jsx","Components/TaskContent/EditBtn.jsx","Components/TaskContent/ContentTaskTitle.jsx","Components/TaskContent/ContentTask.jsx","Components/TaskContent/CreateContentTask.jsx","App.js","store/reducers/btnReduce.js","store/reducers/taskReducer.js","store/reducers/contentTaskReducer.js","store/reducers/selectTaskReducer.js","store/index.js","index.js"],"names":["Title","name","secondname","styles","style","className","EDIT_MODE_CONTENT","boolen","type","payload","EDIT_MODE_NAME","ADD_SELECT_TASK","obj","OPEN_PANEL","RemoveBtn","id","dispatch","useDispatch","tasks","useSelector","state","taskReducer","taskContents","contentTaskReducer","tasksContents","onClick","e","Elemid","filterArr","filter","item","filterArrContent","defaultTask","content","length","stopPropagation","removeElement","src","alt","Task","items","editModeContent","editMode","editModeName","map","filterItem","filterItemName","selectTask","classnames","background","Color","setColorBG","index","classNames","AddPanel","isOpen","bgColours","React","useState","nameTask","setNameTask","colorBG","tasksList","taskObj","onChange","target","value","placeholder","AddBtn","setTask","status","btnReduce","Input","selectItem","defaultValue","text","EditBtn","openEdior","ContentTaskTitle","ContentTask","selectTaskReducer","selected","CreateContentTask","inpValue","setInpValue","addedObj","addedSelectedObj","place","App","useEffect","document","title","defaultState","rootReducer","combineReducers","action","persistedData","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","subscribe","setItem","stringify","getState","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.49c7de7e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Title({ name, secondname, styles }) {\r\n    return (\r\n        <div>\r\n            <div style={styles} className=\"todo__leftSide-logo\">\r\n                {name} <span>{secondname}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","export const ADD_TASK_CONTENT = (array) => ({\r\n    type: 'ADD_TASK_CONTENT',\r\n    payload: array\r\n})\r\n\r\nexport const REMOVE_TASK_CONTENT = (obj) => ({\r\n    type: 'REMOVE_TASK_CONTENT',\r\n    payload: obj\r\n})\r\n\r\nexport const EDIT_MODE_CONTENT = (boolen) => ({\r\n    type: 'EDIT_MODE_CONTENT',\r\n    payload: boolen\r\n})\r\nexport const ADD_TASK = (array) => ({\r\n    type: 'ADD_TASK',\r\n    payload: array\r\n})\r\n\r\nexport const REMOVE_TASK = (obj) => ({\r\n    type: 'REMOVE_TASK',\r\n    payload: obj\r\n})\r\n\r\nexport const EDIT_MODE_NAME = (boolen) => ({\r\n    type: 'EDIT_MODE_NAME',\r\n    payload: boolen\r\n})\r\nexport const ADD_SELECT_TASK = (obj) => ({\r\n    type: 'ADD_SELECT_TASK',\r\n    payload: obj\r\n})\r\nexport const OPEN_PANEL = (boolen) => ({\r\n    type: 'OPEN_PANEL',\r\n    payload: boolen\r\n})","import React, { Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { REMOVE_TASK, REMOVE_TASK_CONTENT, ADD_SELECT_TASK  } from '../store/actions/'\r\n\r\nconst RemoveBtn = ({ id }) => {\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(state => state.taskReducer.tasks);\r\n    const taskContents = useSelector(state => state.contentTaskReducer.tasksContents);\r\n\r\n    const removeElement = (e, Elemid) => {\r\n        const filterArr = tasks.filter(item => item.id !== Elemid)\r\n        const filterArrContent = taskContents.filter(item => item.id !== Elemid)\r\n        const defaultTask = { id: filterArr[0].id, name: filterArr[0].name, content: filterArrContent[0].content }\r\n        dispatch(REMOVE_TASK(filterArr))\r\n        dispatch(REMOVE_TASK_CONTENT(filterArrContent))\r\n        if (filterArr.length !== 0) {\r\n            dispatch(ADD_SELECT_TASK(defaultTask))\r\n        } else {\r\n            dispatch(ADD_SELECT_TASK({}))\r\n        }\r\n        e.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div onClick={(e) => removeElement(e, id)} className=\"task-remove\">\r\n                <img src=\"./close.png\" alt=\"\" />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RemoveBtn\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RemoveBtn from './RemoveBtn'\r\nimport { ADD_SELECT_TASK } from '../store/actions/'\r\n\r\nconst Task = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const items = useSelector(state => state.taskReducer.tasks)\r\n    const taskContents = useSelector(state => state.contentTaskReducer.tasksContents);\r\n    const editModeContent = useSelector(state => state.contentTaskReducer.editMode);\r\n    const editModeName = useSelector(state => state.taskReducer.editMode);\r\n\r\n\r\n    const selectTask = (id) => {\r\n\r\n        const filterItem = taskContents.filter(item => item.id === id)\r\n        const filterItemName = items.filter(item => item.id === id)\r\n        const obj = {id: filterItem[0].id,name: filterItemName[0].name,content: filterItem[0].content}\r\n        \r\n        if (editModeContent || editModeName) {\r\n            return\r\n        } else {\r\n            if (filterItem.length) {\r\n                dispatch(ADD_SELECT_TASK(obj))\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                items.map((item) =>\r\n                    <div onClick={() => selectTask(item.id)} key={item.id} className={classnames('task', item.background)}>\r\n                        <RemoveBtn id={item.id} />\r\n                        {item.name}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import classNames from 'classnames'\r\nimport React, { Fragment } from 'react'\r\n\r\nconst Color = ({items, setColorBG}) => {\r\n    return (\r\n        <Fragment>\r\n            {items.map((item, index) =>\r\n                <div onClick={() => setColorBG(item)} key={index} className={classNames('gradient', item)}></div>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Color\r\n","import classNames from 'classnames'\r\nimport React from 'react'\r\nimport Color from './Color'\r\nimport Title from './Title'\r\nimport { OPEN_PANEL, ADD_TASK } from '../store/actions/'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst AddPanel = ({ isOpen, bgColours, tasks }) => {\r\n    const [nameTask, setNameTask] = React.useState('');\r\n    const [colorBG, setColorBG] = React.useState('');\r\n    const dispatch = useDispatch()\r\n    const tasksList = useSelector(state => state.taskReducer.tasks);\r\n    const taskContents = useSelector(state => state.contentTaskReducer.tasksContents);\r\n    \r\n    const taskObj = {\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n        name: nameTask,\r\n        background: colorBG\r\n    }\r\n\r\n    const addTask = () => {\r\n        if (tasksList.length !== taskContents.length) {\r\n            return\r\n        } else {\r\n            dispatch(ADD_TASK(taskObj))\r\n            dispatch(OPEN_PANEL(false))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classNames('addTask-panel', isOpen ? 'open-panel' : '')}>\r\n                <Title name=\"add\" secondname=\"panel\"> </Title>\r\n                <div className=\"addTask-panel-taskName\">\r\n                    <input onChange={(e) => setNameTask(e.target.value)} placeholder=\"name\" type=\"text\" />\r\n                </div>\r\n                <div className=\"addTask-panel-gradient\">\r\n                    <Color setColorBG={setColorBG} items={bgColours} />\r\n                </div>\r\n                <div onClick={() => addTask(nameTask, colorBG)} className=\"todo__leftSide-addBtn\">\r\n                    ADD TASK\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPanel\r\n","import React from 'react'\r\nimport AddPanel from './AddPanel'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { OPEN_PANEL } from '../store/actions/'\r\n\r\nconst AddBtn = ({ name, bgColours, setTask, tasks }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(state => state.btnReduce.status)\r\n    \r\n    return (\r\n        <div>\r\n            <div onClick={() => dispatch(OPEN_PANEL(!status)) } className=\"todo__leftSide-addBtn\">\r\n                {name}\r\n            </div>\r\n\r\n            <AddPanel tasks={tasks} setTask={setTask} bgColours={bgColours} isOpen={status}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddBtn\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst Input = ({selectItem, editModeContent, value}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let tasks = useSelector(state => state.taskReducer.tasks);\r\n    let taskContents = useSelector(state => state.contentTaskReducer.tasksContents);\r\n\r\n    const editContent = (id, text) => {\r\n        if (editModeContent) {\r\n            taskContents = taskContents.map(item => {\r\n                if (item.id === id) {\r\n                    item.content = text\r\n                }\r\n                return item\r\n            })\r\n            selectItem.content = text\r\n            dispatch({ type: 'REMOVE_TASK_CONTENT', payload: taskContents })\r\n        } else {\r\n            tasks = tasks.map(item => {\r\n                if (item.id === id) {\r\n                    item.name = text\r\n                }\r\n                return item\r\n            })\r\n            selectItem.name = text\r\n            dispatch({ type: 'REMOVE_TASK', payload: tasks })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='create__content-form'>\r\n            <input type=\"text\" defaultValue={value} onChange={(e) => editContent(selectItem.id, e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst EditBtn = ({type, payload}) => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const openEdior = (type, payload) => {\r\n        dispatch(type(!payload))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={() => openEdior(type, payload)} className=\"edit\"><img src=\"./edit.png\" alt=\"edit-icon\" /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditBtn\r\n","import React from 'react'\r\nimport Title from '../Title'\r\nimport Input from './Input'\r\nimport EditBtn from './EditBtn'\r\nimport { useSelector } from 'react-redux'\r\nimport { EDIT_MODE_NAME } from '../../store/actions'\r\n\r\nconst ContentTaskTitle = ({selectItem, editModeContent, value }) => {\r\n    const editModeName = useSelector(state => state.taskReducer.editMode);\r\n    return (\r\n        <div>\r\n            <div className=\"todo-head\">\r\n                {editModeName\r\n                    ?\r\n                    <Input value={value} editModeContent={editModeContent} selectItem={selectItem} />\r\n                    :\r\n                    <Title name={selectItem.name}></Title>\r\n                }\r\n                <EditBtn type={EDIT_MODE_NAME} payload={editModeName} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentTaskTitle\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Input from './Input'\r\nimport ContentTaskTitle from './ContentTaskTitle'\r\nimport EditBtn from './EditBtn'\r\nimport { EDIT_MODE_CONTENT } from '../../store/actions'\r\n\r\nconst ContentTask = () => {\r\n    const dispatch = useDispatch()\r\n    const selectItem = useSelector(state => state.selectTaskReducer.selected)\r\n    const editModeContent = useSelector(state => state.contentTaskReducer.editMode);\r\n    let tasks = useSelector(state => state.taskReducer.tasks);\r\n\r\n    const openEdior = (type, payload) => {\r\n        dispatch({ type: type, payload: !payload })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {tasks.length !== 0 ?\r\n                <Fragment>\r\n                    <ContentTaskTitle openEdior={openEdior} value={selectItem.name} editModeContent={editModeContent} selectItem={selectItem}/>\r\n                    <div className='todo-content'>\r\n                        <div className=\"todo__rightSide-content\">\r\n                            {editModeContent\r\n                                ?\r\n                                <Input value={selectItem.content} editModeContent={editModeContent} selectItem={selectItem} /> :\r\n                                <span>{selectItem ? selectItem.content : ''}\r\n                                </span>\r\n                            }\r\n                        </div>\r\n                       <EditBtn type={EDIT_MODE_CONTENT} payload={editModeContent} />\r\n                    </div>\r\n\r\n                </Fragment> :\r\n                <div className=\"no-task\">\r\n                    <img src=\"./happiness.png\" alt=\"smile\" />\r\n                    <span>Добавте свою первую задачу</span>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ContentTask\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ADD_TASK_CONTENT, ADD_SELECT_TASK } from '../../store/actions'\r\n\r\nconst CreateContentTask = () => {\r\n    const [inpValue, setInpValue] = React.useState();\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(state => state.taskReducer.tasks);\r\n\r\n    const filterItemName = tasks.filter(item => item.id === tasks[tasks.length - 1].id)\r\n    const addedObj = {id: tasks[tasks.length - 1].id,content: inpValue}\r\n    const addedSelectedObj =  {id: tasks[tasks.length - 1].id,name: filterItemName[0].name,content: inpValue}\r\n   \r\n    const addContent = () => {\r\n        dispatch(ADD_TASK_CONTENT(addedObj))\r\n        dispatch(ADD_SELECT_TASK(addedSelectedObj))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"create__content\">\r\n                <div className=\"create__content-form\">\r\n                    <span>ADD TODO DESCRIPTION</span>\r\n                    <input onChange={(e) => setInpValue(e.target.value)} type=\"text\" place />\r\n\r\n                    <div onClick={() => addContent()} className=\"todo__leftSide-addBtn\">\r\n                        ADD TASK\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateContentTask\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Title from './Components/Title'\r\nimport Task from './Components/Task'\r\nimport AddBtn from './Components/AddBtn';\r\nimport {useSelector} from 'react-redux'\r\nimport ContentTask from './Components/TaskContent/ContentTask';\r\nimport CreateContentTask from './Components/TaskContent/CreateContentTask';\r\n\r\nconst App = () => {\r\n\r\n  const tasks = useSelector(state => state.taskReducer.tasks);\r\n  const taskContents = useSelector(state => state.contentTaskReducer.tasksContents);\r\n  const bgColours = ['blue', 'orange', 'yellow', 'purple', 'green', 'red', 'pink', 'blue_green', 'blue_pink',]\r\n  \r\n  React.useEffect(() => {\r\n    document.title = 'REACT-TODO APP'\r\n  },);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"todo\">\r\n        <div className=\"todo__leftSide\">\r\n          <Title name=\"react\" secondname=\"todo\"> </Title>\r\n          <div className=\"todo__leftSide-tasks\">\r\n           {tasks.length > 0 ? <Task items={tasks} />: ''}\r\n          </div>\r\n          <AddBtn tasks={tasks} bgColours={bgColours} name={'ADD TASK'} />\r\n        </div>\r\n        <div className=\"todo__rightSide\">\r\n          {tasks.length !== taskContents.length ? <CreateContentTask /> : <ContentTask />}\r\n       </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const defaultState = {\r\n    status: false\r\n}\r\nexport const btnReduce = (state = defaultState, action) => {\r\n    \r\n    \r\n    switch (action.type) {\r\n        \r\n        case 'OPEN_PANEL' :\r\n            return { ...state, status: state.status = action.payload }\r\n            \r\n        default:\r\n           \r\n            return state\r\n    }\r\n}","const defaultState = {\r\n    tasks: [],\r\n    editMode: false\r\n}\r\n\r\nexport const taskReducer = (state = defaultState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'ADD_TASK':\r\n            return ({ ...state, tasks: [...state.tasks, action.payload] })\r\n        case 'REMOVE_TASK':\r\n            return ({ ...state, tasks: action.payload })\r\n        case 'EDIT_MODE_NAME':\r\n            return { ...state, editMode: state.editMode = action.payload }\r\n        default:\r\n\r\n            return state\r\n    }\r\n}","const defaultState = {\r\n    tasksContents: [],\r\n    editMode: false,\r\n}\r\n\r\nexport const contentTaskReducer = (state = defaultState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'ADD_TASK_CONTENT':\r\n            return ({ ...state, tasksContents: [...state.tasksContents, action.payload] })\r\n        case 'REMOVE_TASK_CONTENT':\r\n            return ({...state, tasksContents: action.payload })\r\n        case 'EDIT_MODE_CONTENT':\r\n            return { ...state, editMode: state.editMode = action.payload }\r\n        default:\r\n\r\n            return state\r\n    }\r\n}","const defaultState = {\r\n    selected: {}\r\n}\r\n\r\nexport const selectTaskReducer = (state = defaultState, action) => {\r\n    \r\n    \r\n    switch (action.type) {\r\n        \r\n        case 'ADD_SELECT_TASK':\r\n            return (\r\n                { ...state, selected: action.payload }\r\n            )\r\n        default:\r\n           \r\n            return state\r\n    }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport { btnReduce } from './reducers/btnReduce'\r\nimport { taskReducer } from './reducers/taskReducer'\r\nimport { contentTaskReducer } from './reducers/contentTaskReducer'\r\nimport { selectTaskReducer } from './reducers/selectTaskReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst rootReducer = combineReducers({\r\n    btnReduce,\r\n    taskReducer,\r\n    contentTaskReducer,\r\n    selectTaskReducer,\r\n});\r\nconst persistedData = localStorage.getItem('todoReactData') ? JSON.parse(localStorage.getItem('todoReactData')) : {}\r\n\r\nexport const store = createStore(rootReducer, persistedData, composeWithDevTools())\r\n\r\nstore.subscribe(() => {\r\n   localStorage.setItem('todoReactData', JSON.stringify(store.getState()))\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\n\r\nconsole.log(store)\r\nReactDOM.render(\r\n  \r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}